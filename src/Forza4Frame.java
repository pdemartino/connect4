
import f4.players.*;
import f4.stato.Stato;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.xml.crypto.dsig.spec.C14NMethodParameterSpec;



public class Forza4Frame extends javax.swing.JFrame {

    /** Creates new form Forza4Frame */
    public Forza4Frame() {
        initComponents();
        
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        pannelloImpostazioni = new javax.swing.JPanel();
        startButton = new javax.swing.JButton();
        redPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        player1HumanRadio = new javax.swing.JRadioButton();
        player1ComputerRadio = new javax.swing.JRadioButton();
        player1MinimaxRadio = new javax.swing.JRadioButton();
        player1AlphaBetaRadio = new javax.swing.JRadioButton();
        player1Deepth = new javax.swing.JComboBox();
        player1DeepthLabel = new javax.swing.JLabel();
        yellowPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        player2HumanRadio = new javax.swing.JRadioButton();
        player2MinimaxRadio = new javax.swing.JRadioButton();
        player2ComputerRadio = new javax.swing.JRadioButton();
        player2AlphaBetaRadio = new javax.swing.JRadioButton();
        player2Deepth = new javax.swing.JComboBox();
        player2DeepthLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        pannelloDiGioco = new javax.swing.JPanel();
        gameBoard = new GameBoard();
        userPanel = new javax.swing.JPanel();
        //userPanelIsEnabled(false);
        azione_1 = new javax.swing.JButton();
        azione_2 = new javax.swing.JButton();
        azione_3 = new javax.swing.JButton();
        azione_4 = new javax.swing.JButton();
        azione_5 = new javax.swing.JButton();
        azione_6 = new javax.swing.JButton();
        azione_7 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        userTipsLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        titleLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        pannelloStatistiche = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lavagna = new javax.swing.JTextArea();
        statisticheDiGioco_Label = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pannelloImpostazioni.setBackground(new java.awt.Color(204, 204, 255));
        pannelloImpostazioni.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.darkGray));

        startButton.setFont(new java.awt.Font("Dialog", 1, 18));
        startButton.setText("Play!");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        redPanel.setBackground(new java.awt.Color(153, 0, 0));
        redPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Kristen ITC", 1, 12));
        jLabel1.setForeground(new java.awt.Color(255, 204, 0));
        jLabel1.setText("Giocatore Rosso");

        player1HumanRadio.setBackground(new java.awt.Color(153, 0, 0));
        buttonGroup1.add(player1HumanRadio);
        player1HumanRadio.setForeground(new java.awt.Color(255, 204, 0));
        player1HumanRadio.setLabel("Umano");
        player1HumanRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player1HumanRadioActionPerformed(evt);
            }
        });

        player1ComputerRadio.setBackground(new java.awt.Color(153, 0, 0));
        buttonGroup1.add(player1ComputerRadio);
        player1ComputerRadio.setForeground(new java.awt.Color(255, 204, 0));
        player1ComputerRadio.setSelected(true);
        player1ComputerRadio.setLabel("Computer");
        player1ComputerRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player1ComputerRadioActionPerformed(evt);
            }
        });

        player1MinimaxRadio.setBackground(new java.awt.Color(153, 0, 0));
        buttonGroup2.add(player1MinimaxRadio);
        player1MinimaxRadio.setForeground(new java.awt.Color(255, 204, 0));
        player1MinimaxRadio.setSelected(true);
        player1MinimaxRadio.setFocusCycleRoot(true);
        player1MinimaxRadio.setLabel("MiniMax");
        player1MinimaxRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player1MinimaxRadioActionPerformed(evt);
            }
        });

        player1AlphaBetaRadio.setBackground(new java.awt.Color(153, 0, 0));
        buttonGroup2.add(player1AlphaBetaRadio);
        player1AlphaBetaRadio.setForeground(new java.awt.Color(255, 204, 0));
        player1AlphaBetaRadio.setText("AlphaBeta Pruning");
        player1AlphaBetaRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player1AlphaBetaRadioActionPerformed(evt);
            }
        });

        player1Deepth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "3", "4", "5", "6", "7", "8", "9" }));

        player1DeepthLabel.setBackground(new java.awt.Color(153, 0, 0));
        player1DeepthLabel.setForeground(new java.awt.Color(255, 204, 0));
        player1DeepthLabel.setText("Profondita' albero");
        player1DeepthLabel.setEnabled(false);

        javax.swing.GroupLayout redPanelLayout = new javax.swing.GroupLayout(redPanel);
        redPanel.setLayout(redPanelLayout);
        redPanelLayout.setHorizontalGroup(
            redPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(redPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(redPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(redPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(redPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(redPanelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(player1Deepth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(player1DeepthLabel))
                            .addComponent(player1HumanRadio)
                            .addComponent(player1ComputerRadio)
                            .addGroup(redPanelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(redPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(player1AlphaBetaRadio)
                                    .addComponent(player1MinimaxRadio))))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        redPanelLayout.setVerticalGroup(
            redPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(redPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(player1HumanRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(player1ComputerRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(player1MinimaxRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(player1AlphaBetaRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(redPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(player1DeepthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(player1Deepth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        player1MinimaxRadio.getAccessibleContext().setAccessibleParent(player1ComputerRadio);
        player1AlphaBetaRadio.getAccessibleContext().setAccessibleParent(player1ComputerRadio);

        yellowPanel.setBackground(new java.awt.Color(255, 204, 0));
        yellowPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        yellowPanel.setForeground(new java.awt.Color(153, 0, 0));

        jLabel2.setFont(new java.awt.Font("Kristen ITC", 1, 12));
        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("Giocatore Giallo");

        player2HumanRadio.setBackground(new java.awt.Color(255, 204, 0));
        buttonGroup3.add(player2HumanRadio);
        player2HumanRadio.setForeground(new java.awt.Color(153, 0, 0));
        player2HumanRadio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        player2HumanRadio.setLabel("Umano");
        player2HumanRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player2HumanRadioActionPerformed(evt);
            }
        });

        player2MinimaxRadio.setBackground(new java.awt.Color(255, 204, 0));
        buttonGroup4.add(player2MinimaxRadio);
        player2MinimaxRadio.setForeground(new java.awt.Color(153, 0, 0));
        player2MinimaxRadio.setSelected(true);
        player2MinimaxRadio.setLabel("MiniMax");

        player2ComputerRadio.setBackground(new java.awt.Color(255, 204, 0));
        buttonGroup3.add(player2ComputerRadio);
        player2ComputerRadio.setForeground(new java.awt.Color(153, 0, 0));
        player2ComputerRadio.setSelected(true);
        player2ComputerRadio.setLabel("Computer");
        player2ComputerRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player2ComputerRadioActionPerformed(evt);
            }
        });

        player2AlphaBetaRadio.setBackground(new java.awt.Color(255, 204, 0));
        buttonGroup4.add(player2AlphaBetaRadio);
        player2AlphaBetaRadio.setForeground(new java.awt.Color(153, 0, 0));
        player2AlphaBetaRadio.setText("AlphaBeta Pruning");

        player2Deepth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "3", "4", "5", "6", "7", "8", "9" }));

        player2DeepthLabel.setForeground(new java.awt.Color(153, 0, 0));
        player2DeepthLabel.setText("Profondita' albero");
        player2DeepthLabel.setEnabled(false);

        javax.swing.GroupLayout yellowPanelLayout = new javax.swing.GroupLayout(yellowPanel);
        yellowPanel.setLayout(yellowPanelLayout);
        yellowPanelLayout.setHorizontalGroup(
            yellowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(yellowPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(yellowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(yellowPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(yellowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(player2ComputerRadio)
                            .addComponent(player2HumanRadio)
                            .addGroup(yellowPanelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(yellowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(player2AlphaBetaRadio)
                                    .addComponent(player2MinimaxRadio)
                                    .addGroup(yellowPanelLayout.createSequentialGroup()
                                        .addComponent(player2Deepth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(player2DeepthLabel)))))))
                .addContainerGap())
        );
        yellowPanelLayout.setVerticalGroup(
            yellowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(yellowPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(player2HumanRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(player2ComputerRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(player2MinimaxRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(player2AlphaBetaRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(yellowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(player2Deepth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(player2DeepthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        player2HumanRadio.getAccessibleContext().setAccessibleParent(jLabel2);
        player2ComputerRadio.getAccessibleContext().setAccessibleParent(jLabel2);
        player2AlphaBetaRadio.getAccessibleContext().setAccessibleParent(player2ComputerRadio);

        jLabel5.setText("Impostazioni di gioco");

        javax.swing.GroupLayout pannelloImpostazioniLayout = new javax.swing.GroupLayout(pannelloImpostazioni);
        pannelloImpostazioni.setLayout(pannelloImpostazioniLayout);
        pannelloImpostazioniLayout.setHorizontalGroup(
            pannelloImpostazioniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pannelloImpostazioniLayout.createSequentialGroup()
                .addGroup(pannelloImpostazioniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pannelloImpostazioniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pannelloImpostazioniLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel5))
                        .addGroup(pannelloImpostazioniLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(redPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pannelloImpostazioniLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(pannelloImpostazioniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                .addComponent(yellowPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))))
                    .addGroup(pannelloImpostazioniLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))
                    .addGroup(pannelloImpostazioniLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pannelloImpostazioniLayout.setVerticalGroup(
            pannelloImpostazioniLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pannelloImpostazioniLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(redPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yellowPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startButton)
                .addContainerGap())
        );

        pannelloDiGioco.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 51, 0)));

        gameBoard.associaStato(statoGioco);
        gameBoard.setBackground(new java.awt.Color(0, 0, 255));
        gameBoard.setBorder(javax.swing.BorderFactory.createMatteBorder(8, 8, 8, 8, new java.awt.Color(0, 0, 255)));
        gameBoard.setModel(gameBoard.getModel());
        gameBoard.setIntercellSpacing(new java.awt.Dimension(4, 4));

        userPanel.setBackground(new java.awt.Color(204, 204, 255));
        userPanel.setEnabled(false);
        userPanel.setLayout(new java.awt.GridLayout(1, 7));

        azione_1.setAlignmentX(gameBoard.getAlignmentX());
        azione_1.setLabel("1");
        azione_1.setMaximumSize(new java.awt.Dimension(40, 23));
        azione_1.setMinimumSize(new java.awt.Dimension(40, 23));
        azione_1.setPreferredSize(new java.awt.Dimension(40, 23));
        azione_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                azione_1ActionPerformed(evt);
            }
        });
        userPanel.add(azione_1);

        azione_2.setText("2");
        azione_2.setMaximumSize(new java.awt.Dimension(40, 23));
        azione_2.setMinimumSize(new java.awt.Dimension(40, 23));
        azione_2.setPreferredSize(new java.awt.Dimension(40, 23));
        azione_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                azione_2ActionPerformed(evt);
            }
        });
        userPanel.add(azione_2);

        azione_3.setText("3");
        azione_3.setMaximumSize(new java.awt.Dimension(40, 23));
        azione_3.setMinimumSize(new java.awt.Dimension(40, 23));
        azione_3.setPreferredSize(new java.awt.Dimension(40, 23));
        azione_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                azione_3ActionPerformed(evt);
            }
        });
        userPanel.add(azione_3);

        azione_4.setText("4");
        azione_4.setMaximumSize(new java.awt.Dimension(40, 23));
        azione_4.setMinimumSize(new java.awt.Dimension(40, 23));
        azione_4.setPreferredSize(new java.awt.Dimension(40, 23));
        azione_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                azione_4ActionPerformed(evt);
            }
        });
        userPanel.add(azione_4);

        azione_5.setText("5");
        azione_5.setMaximumSize(new java.awt.Dimension(40, 23));
        azione_5.setMinimumSize(new java.awt.Dimension(40, 23));
        azione_5.setPreferredSize(new java.awt.Dimension(40, 23));
        azione_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                azione_5ActionPerformed(evt);
            }
        });
        userPanel.add(azione_5);

        azione_6.setText("6");
        azione_6.setMaximumSize(new java.awt.Dimension(40, 23));
        azione_6.setMinimumSize(new java.awt.Dimension(40, 23));
        azione_6.setPreferredSize(new java.awt.Dimension(40, 23));
        azione_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                azione_6ActionPerformed(evt);
            }
        });
        userPanel.add(azione_6);

        azione_7.setText("7");
        azione_7.setMaximumSize(new java.awt.Dimension(40, 23));
        azione_7.setMinimumSize(new java.awt.Dimension(40, 23));
        azione_7.setPreferredSize(new java.awt.Dimension(40, 23));
        azione_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                azione_7ActionPerformed(evt);
            }
        });
        userPanel.add(azione_7);

        jLabel3.setText("jLabel3");

        userTipsLabel.setText("Scegli in quale colonna inserire la tua pedina...");

        titleLabel.setFont(new java.awt.Font("Kristen ITC", 1, 11));
        titleLabel.setText("Connect4!");

        javax.swing.GroupLayout pannelloDiGiocoLayout = new javax.swing.GroupLayout(pannelloDiGioco);
        pannelloDiGioco.setLayout(pannelloDiGiocoLayout);
        pannelloDiGiocoLayout.setHorizontalGroup(
            pannelloDiGiocoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pannelloDiGiocoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pannelloDiGiocoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addComponent(userTipsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addComponent(titleLabel)
                    .addComponent(gameBoard, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(pannelloDiGiocoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pannelloDiGiocoLayout.createSequentialGroup()
                    .addGap(0, 180, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addGap(0, 181, Short.MAX_VALUE)))
        );
        pannelloDiGiocoLayout.setVerticalGroup(
            pannelloDiGiocoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pannelloDiGiocoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(gameBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(userTipsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(pannelloDiGiocoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pannelloDiGiocoLayout.createSequentialGroup()
                    .addGap(0, 235, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addGap(0, 235, Short.MAX_VALUE)))
        );

        pannelloStatistiche.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 3));

        lavagna.append("Applicazione a cura di: \n");
        lavagna.append("Davino Marcella \n De Martino Pasquale\n \n");
        lavagna.append("Benvenuto!!! \n");
        lavagna.setColumns(20);
        lavagna.setEditable(false);
        lavagna.setRows(5);
        lavagna.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        lavagna.append("Seleziona i giocatori...");
        jScrollPane1.setViewportView(lavagna);

        statisticheDiGioco_Label.setText("Statistiche di gioco");

        javax.swing.GroupLayout pannelloStatisticheLayout = new javax.swing.GroupLayout(pannelloStatistiche);
        pannelloStatistiche.setLayout(pannelloStatisticheLayout);
        pannelloStatisticheLayout.setHorizontalGroup(
            pannelloStatisticheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pannelloStatisticheLayout.createSequentialGroup()
                .addGroup(pannelloStatisticheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pannelloStatisticheLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE))
                    .addGroup(pannelloStatisticheLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(statisticheDiGioco_Label))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pannelloStatisticheLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pannelloStatisticheLayout.setVerticalGroup(
            pannelloStatisticheLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pannelloStatisticheLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statisticheDiGioco_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(471, 471, 471))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pannelloDiGioco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pannelloStatistiche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pannelloImpostazioni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pannelloStatistiche, javax.swing.GroupLayout.Alignment.LEADING, 0, 486, Short.MAX_VALUE)
                    .addComponent(pannelloImpostazioni, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pannelloDiGioco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleParent(pannelloImpostazioni);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
        

        //Definisco i giocatori
        //Giocatore Rosso (player1)
        //Umano o Computer?

        if (player1HumanRadio.isSelected()){
            //player1Type = PlayerType.Human;
            player1 = new HumanPlayer(statoGioco,1);
            userPanelIsEnabled(true);
            //System.out.println("Giocatore 1 Umano");
            
        }
        else{//player 2 è un ComputerPlayer
            //player1Type = PlayerType.Computer;
            //tipòo di algoritmo
            //System.out.println("Giocatore 1 Computer");
            String algoritmo;
            if (player1MinimaxRadio.isSelected())
                algoritmo="minimax";
            else
                algoritmo="alphabeta";

            //profondità albero
            int profondita = Integer.parseInt(player1Deepth.getSelectedItem().toString());

            player1 = new ComputerPlayer(1,profondita, algoritmo, statoGioco);
        }

        //Giocatore Giallo (player2)
        //Umano o Computer?

        if (player2HumanRadio.isSelected()){
            //player1Type = PlayerType.Human;
            player2 = new HumanPlayer(statoGioco,-1);
            userPanelIsEnabled(true);

        }
        else{//player 2 è un ComputerPlayer
            //player1Type = PlayerType.Computer;
            //tipòo di algoritmo
            String algoritmo;
            if (player2MinimaxRadio.isSelected())
                algoritmo="minimax";
            else
                algoritmo="alphabeta";

            //profondità albero
            int profondita = Integer.parseInt(player2Deepth.getSelectedItem().toString());

            player2 = new ComputerPlayer(-1,profondita, algoritmo, statoGioco);
        }


        (new Thread(gm)).start();

    }//GEN-LAST:event_startButtonActionPerformed

    private void player1ComputerRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player1ComputerRadioActionPerformed
        // TODO add your handling code here:
        ////Computer => !Human, MiniMax , AlphaBeta , Depth
        player1MinimaxRadio.setEnabled(true);
        player1AlphaBetaRadio.setEnabled(true);
        player1Deepth.setEnabled(true);
        player1DeepthLabel.setEnabled(true);
    }//GEN-LAST:event_player1ComputerRadioActionPerformed

    private void player1HumanRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player1HumanRadioActionPerformed
        // TODO add your handling code here:
        //Human => !MiniMax , !AlphaBeta , !Depth
        player1MinimaxRadio.setEnabled(false);
        player1AlphaBetaRadio.setEnabled(false);
        player1Deepth.setEnabled(false);
        player1DeepthLabel.setEnabled(false);

    }//GEN-LAST:event_player1HumanRadioActionPerformed

    private void player2HumanRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player2HumanRadioActionPerformed
        // TODO add your handling code here:
        //Human => !MiniMax , !AlphaBeta , !Depth
        player2MinimaxRadio.setEnabled(false);
        player2AlphaBetaRadio.setEnabled(false);
        player2Deepth.setEnabled(false);
        player2DeepthLabel.setEnabled(false);
    }//GEN-LAST:event_player2HumanRadioActionPerformed

    private void player2ComputerRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player2ComputerRadioActionPerformed
        // TODO add your handling code here:
        ////Computer => !Human, MiniMax , AlphaBeta , Depth
        player2MinimaxRadio.setEnabled(true);
        player2AlphaBetaRadio.setEnabled(true);
        player2Deepth.setEnabled(true);
        player2DeepthLabel.setEnabled(true);
    }//GEN-LAST:event_player2ComputerRadioActionPerformed

    private void player1AlphaBetaRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player1AlphaBetaRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_player1AlphaBetaRadioActionPerformed

    private void azione_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_azione_7ActionPerformed
        // TODO add your handling code here:
        int azione=7;
        if (this.statoGioco.getTurno()==1)
            player1.setAction(azione);
        else
            player2.setAction(azione);
}//GEN-LAST:event_azione_7ActionPerformed

    private void azione_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_azione_6ActionPerformed
        // TODO add your handling code here:
        int azione=6;
        if (this.statoGioco.getTurno()==1)
            player1.setAction(azione);
        else
            player2.setAction(azione);
}//GEN-LAST:event_azione_6ActionPerformed

    private void azione_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_azione_5ActionPerformed
        // TODO add your handling code here:
        int azione=5;
        if (this.statoGioco.getTurno()==1)
            player1.setAction(azione);
        else
            player2.setAction(azione);
}//GEN-LAST:event_azione_5ActionPerformed

    private void azione_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_azione_4ActionPerformed
        // TODO add your handling code here:
        int azione=4;
        if (this.statoGioco.getTurno()==1)
            player1.setAction(azione);
        else
            player2.setAction(azione);
}//GEN-LAST:event_azione_4ActionPerformed

    private void azione_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_azione_3ActionPerformed
        // TODO add your handling code here:
        int azione=3;
        if (this.statoGioco.getTurno()==1)
            player1.setAction(azione);
        else
            player2.setAction(azione);
}//GEN-LAST:event_azione_3ActionPerformed

    private void azione_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_azione_2ActionPerformed
        // TODO add your handling code here:
        int azione=2;
        if (this.statoGioco.getTurno()==1)
            player1.setAction(azione);
        else
            player2.setAction(azione);
}//GEN-LAST:event_azione_2ActionPerformed

    private void azione_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_azione_1ActionPerformed
        // TODO add your handling code here:
        int azione=1;
        if (this.statoGioco.getTurno()==1)
            player1.setAction(azione);
        else
            player2.setAction(azione);
    }//GEN-LAST:event_azione_1ActionPerformed

    private void player1MinimaxRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player1MinimaxRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_player1MinimaxRadioActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
           
            public void run() {
               Forza4Frame F4 =  new Forza4Frame();

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton azione_1;
    private javax.swing.JButton azione_2;
    private javax.swing.JButton azione_3;
    private javax.swing.JButton azione_4;
    private javax.swing.JButton azione_5;
    private javax.swing.JButton azione_6;
    private javax.swing.JButton azione_7;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    Stato statoGioco = new Stato();
    private GameBoard gameBoard;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextArea lavagna;
    private javax.swing.JPanel pannelloDiGioco;
    private javax.swing.JPanel pannelloImpostazioni;
    private javax.swing.JPanel pannelloStatistiche;
    private javax.swing.JRadioButton player1AlphaBetaRadio;
    private javax.swing.JRadioButton player1ComputerRadio;
    private javax.swing.JComboBox player1Deepth;
    private javax.swing.JLabel player1DeepthLabel;
    private javax.swing.JRadioButton player1HumanRadio;
    private javax.swing.JRadioButton player1MinimaxRadio;
    private javax.swing.JRadioButton player2AlphaBetaRadio;
    private javax.swing.JRadioButton player2ComputerRadio;
    private javax.swing.JComboBox player2Deepth;
    private javax.swing.JLabel player2DeepthLabel;
    private javax.swing.JRadioButton player2HumanRadio;
    private javax.swing.JRadioButton player2MinimaxRadio;
    private javax.swing.JPanel redPanel;
    private javax.swing.JButton startButton;
    private javax.swing.JLabel statisticheDiGioco_Label;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel userPanel;
    private javax.swing.JLabel userTipsLabel;
    private javax.swing.JPanel yellowPanel;
    // End of variables declaration//GEN-END:variables


    private Player player1;
    private Player player2;

    GameManager gm= new GameManager();
    Thread gmT= new Thread(gm);

    public void settingsPanelIsEnabled(boolean stato){
        //Player1
        player1HumanRadio.setEnabled(stato);
        player1ComputerRadio.setEnabled(stato);
        player1MinimaxRadio.setEnabled(stato);
        player1AlphaBetaRadio.setEnabled(stato);
        player1Deepth.setEnabled(stato);
        player1DeepthLabel.setEnabled(stato);

        //Player2
        player2HumanRadio.setEnabled(stato);
        player2ComputerRadio.setEnabled(stato);
        player2MinimaxRadio.setEnabled(stato);
        player2AlphaBetaRadio.setEnabled(stato);
        player2Deepth.setEnabled(stato);
        player2DeepthLabel.setEnabled(stato);

        //PlayButton
        startButton.setEnabled(stato);
    }

    public void userPanelIsEnabled(boolean stato){
        azione_1.setEnabled(stato);
        azione_2.setEnabled(stato);
        azione_3.setEnabled(stato);
        azione_4.setEnabled(stato);
        azione_5.setEnabled(stato);
        azione_6.setEnabled(stato);
        azione_7.setEnabled(stato);
        userTipsLabel.setEnabled(stato);
    }

   
 class GameManager implements Runnable{
    public void run() {
        //JScrollPane scrollLavagna= new JScrollPane(lavagna);
	lavagna.setText("Partita iniziata!");
        statoGioco.reset();
        gameBoard.repaint();
        settingsPanelIsEnabled(false);
	while (true){


            //Controllo goal
            int goal= statoGioco.smartGoalTest();
            //System.out.println("Goal: " + goal);
            if (Math.abs(goal)==500){
                if (goal ==500)
                    lavagna.append("\n \n Il Giocatore ROSSO ha VINTO!");
                else
                    lavagna.append("\n \n Il Giocatore GIALLO ha VINTO!");

                gameFinalSummary();
                break;
            }

            int azione=-1;
            int nodiGenerati=0;
            float lastComputingTime=0;

            switch (statoGioco.getTurno()){
                case 1: //Turno Giocatore Rosso
                    //Stampo sulla lavagna
                    lavagna.append("\n \nE' il tuno del giocatore Rosso");
                    lavagna.setCaretPosition(lavagna.getDocument().getLength());
                    azione = player1.getAction();
                    nodiGenerati= player1.getLastActionComputedNodes();
                    lastComputingTime= player1.getLastActionElaborationTime();
                    break;
                case -1:
                    lavagna.append("\n \nE' il tuno del giocatore Giallo");
                    lavagna.setCaretPosition(lavagna.getDocument().getLength());
                    azione = player2.getAction();
                    nodiGenerati= player2.getLastActionComputedNodes();
                    lastComputingTime= player2.getLastActionElaborationTime();
                    break;
            }
            if (azione ==0 ){//Non ci sono pi� mosse per entrambi i giocatori
                lavagna.append("\n\nNon ci sono più mosse utili\nIl gioco termina!");
                gameFinalSummary();
                break;
            }else{
                lavagna.append("\nMossa scelta: " + azione);
                if (nodiGenerati!=0)
                    lavagna.append("\nNodi generati: " + nodiGenerati);
                lavagna.append("\nTempo di elaborazione: " + lastComputingTime + "ms");
                statoGioco.successore(azione);
                gameBoard.repaint();
                
            }
            lavagna.setCaretPosition(lavagna.getDocument().getLength());
         }//EndWhile
        settingsPanelIsEnabled(true);
        userPanelIsEnabled(false);
        lavagna.append("\n\nSelezionare nuovamente i giocatori\nper iniziare una nuova partita!");
        
        lavagna.setCaretPosition(lavagna.getDocument().getLength());
        
    }//end run

    public void gameFinalSummary(){
        lavagna.append("\n\nPartita terminata...");
        lavagna.append("\n______________________");
        lavagna.append("\nSTATISTICHE PARTITA:");

        float tempoMedio;
        int nodiMedi;
        //Statistiche giocatore 1
        lavagna.append("\n\nGiocatore Rosso:");
        tempoMedio= player1.getElaborationTimeAverage();
        nodiMedi=player1.getComputedNodesAverage();
        
        lavagna.append("\nTempo medio di elaborazione: " + tempoMedio + "ms");
        if(nodiMedi!=0){
            lavagna.append("\nMedia nodi generati: " + nodiMedi);
        }

        //Statistiche giocatore 2
        lavagna.append("\n\nGiocatore Giallo:");
        tempoMedio= player2.getElaborationTimeAverage();
        nodiMedi=player2.getComputedNodesAverage();

        lavagna.append("\nTempo medio di elaborazione: " + tempoMedio + "ms");
        if(nodiMedi!=0){
            lavagna.append("\nMedia nodi generati: " + nodiMedi);
        }
        lavagna.append("\n_______________________");


    }
 }
}


